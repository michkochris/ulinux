#!/usr/bin/env bash
#
#
# ulinux: a simple and universal linux distribution...
. ./ulinux-config && PATH=$tpath

pkgname=utoolscross-gcc
pkgver=13.2.0
pkgrel=1
maintainer="michkochris@gmail.com"
description="contains the GNU compiler collection, which includes the C and C++ compilers."
homepage="https://gcc.gnu.org/"
sources="https://ftp.gnu.org/gnu/gcc/gcc-13.2.0/gcc-13.2.0.tar.xz https://ftp.gnu.org/gnu/gmp/gmp-6.3.0.tar.xz https://ftp.gnu.org/gnu/mpfr/mpfr-4.2.1.tar.xz https://ftp.gnu.org/gnu/mpc/mpc-1.3.1.tar.gz"
arch=amd64
depends=
comment="ulinux: a simple and universal linux distribution..."
checkpkginfo

cd $src
# if the file basename of url from sources is not there wget url to get file
#--------------------------------------------------------------------------------------------------------
for url in $sources
	do
	echo "$url"
	filename=$(basename "$url")  # Extract filename from URL
	if [ ! -f "$filename" ]; then
	wget "$url"
	else
	echo "File '$filename' already exists. Skipping."
	fi
done
tar -xvf gcc-13.2.0.tar.xz
cd gcc-$pkgver
#--------------------------------------------------------------------------------------------------------
tar -xvf ../mpfr-4.2.1.tar.xz
mv -v mpfr-4.2.1 mpfr
tar -xvf ../gmp-6.3.0.tar.xz
mv -v gmp-6.3.0 gmp
tar -xvf ../mpc-1.3.1.tar.gz
mv -v mpc-1.3.1 mpc
case $(uname -m) in
  x86_64)
    sed -e '/m64=/s/lib64/lib/' \
        -i.orig gcc/config/i386/t-linux64
 ;;
esac
# change GCC's default dynamic linker to use the one installed in /tools.
sed -i 's,/lib/ld-linux.so.2,/utools/lib32/ld-linux.so.2,g' gcc/config/i386/linux64.h
sed -i 's,/lib64/ld-linux-x86-64.so.2,/utools/lib/ld-linux-x86-64.so.2,g' gcc/config/i386/linux64.h
sed -i 's,/libx32/ld-linux-x32.so.2,/utools/libx32/ld-linux-x32.so.2,g' gcc/config/i386/linux64.h

echo -en '\n#undef STANDARD_STARTFILE_PREFIX_1\n#define STANDARD_STARTFILE_PREFIX_1 "/utools/lib/"\n' >> gcc/config/i386/linux64.h
#--------------------------------------------------------------------------------------------------------
mkdir gccbuild && cd gccbuild
../configure			\
	--prefix=$utoolscross   \
	--target=$crosstarget   \
	--with-glibc-version=2.38 \
	--with-sysroot=$utools	\
	--disable-nls		\
	--disable-werror        \
	--disable-shared	\
	--disable-static	\
	--disable-multilib	\
	--disable-threads	\
	--disable-libatomic	\
	--disable-libgomp	\
	--disable-libquadmath	\
	--disable-libssp	\
	--disable-libvtv	\
	--disable-libstdcxx	\
	--with-newlib		\
        --without-headers	\
	--enable-languages=c,c++

make -j$(nproc)
make install #DESTDIR=$installdir || exit $?
cd ..
cat gcc/limitx.h gcc/glimits.h gcc/limity.h > \
  `dirname $($crosstarget-gcc -print-libgcc-file-name)`/include/limits.h

#defaultpackager
cd $src && rm -rf gcc-$pkgver gccbuild
#cd $pkgdir && dpkg --force-all -i $fullpkgname.deb
# end of file
